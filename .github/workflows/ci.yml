name: Code Quality & Testing CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  #  Quality Checks - Runs on Pull Requests
  quality-checks:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    
    steps:
      - name:  Checkout code
        uses: actions/checkout@v4
        
      - name:  Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name:  Install dependencies
        run: npm ci

      - name:  Run ESLint
        run: npm run lint

      - name:  Check Cyclomatic Complexity (Strict)
        run: npm run complexity

      - name:  Run tests with coverage
        run: npm run test:ci

      - name:  Generate coverage summary
        if: always()
        run: |
          echo "##  Code Quality Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "###  Checks Completed:" >> $GITHUB_STEP_SUMMARY
          echo "-  ESLint validation" >> $GITHUB_STEP_SUMMARY
          echo "-  Cyclomatic complexity analysis" >> $GITHUB_STEP_SUMMARY
          echo "-  Unit tests with coverage" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "###  Coverage Metrics" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage/coverage-summary.json ]; then
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat coverage/coverage-summary.json >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo " No coverage data available" >> $GITHUB_STEP_SUMMARY
          fi

      - name:  Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  #  Production Ready - Runs after merge to main
  ready-for-production:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    
    steps:
      - name:  Show production-ready message
        run: |
          echo "════════════════════════════════════════════════════════"
          echo "   ALL QUALITY CHECKS PASSED!"
          echo "════════════════════════════════════════════════════════"
          echo ""
          echo " ESLint validation: PASSED"
          echo " Code coverage >80%: PASSED"
          echo " Cyclomatic complexity: ACCEPTABLE"
          echo ""
          echo " The code has been merged into MAIN."
          echo " The project is now ready for production deployment!"
          echo ""
          echo "════════════════════════════════════════════════════════"

